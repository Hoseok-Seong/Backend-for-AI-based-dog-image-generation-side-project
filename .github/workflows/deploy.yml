name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Create .env file from secrets
      run: |
        echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
        echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
        echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
        echo "DB_URL=${{ secrets.DB_URL }}" >> .env
        echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
        echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> .env
        echo "DOCKERHUB_PASSWORD=${{ secrets.DOCKERHUB_PASSWORD }}" >> .env
        echo "DOCKER_HUB_ACCESS_TOKEN=${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" >> .env
        echo "EC2_HOST=${{ secrets.EC2_HOST }}" >> .env
        echo "EC2_KEY=${{ secrets.EC2_KEY }}" >> .env
        echo "EC2_USERNAME=${{ secrets.EC2_USERNAME }}" >> .env
        echo "JWT_ACCESS_HS512_SECRET=${{ secrets.JWT_ACCESS_HS512_SECRET }}" >> .env
        echo "JWT_ACCESS_TOKEN_EXP=${{ secrets.JWT_ACCESS_TOKEN_EXP }}" >> .env
        echo "JWT_REFRESH_HS512_SECRET=${{ secrets.JWT_REFRESH_HS512_SECRET }}" >> .env
        echo "JWT_REFRESH_TOKEN_EXP=${{ secrets.JWT_REFRESH_TOKEN_EXP }}" >> .env
        echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> .env
        echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env
        echo "PROJECT_NAME=${{ secrets.PROJECT_NAME }}" >> .env
        echo "PUPPICASSO_API_KEY=${{ secrets.PUPPICASSO_API_KEY }}" >> .env
        echo "PUPPICASSO_MODELSLAB_KEY=${{ secrets.PUPPICASSO_MODELSLAB_KEY }}" >> .env
        echo "PORT=${{ secrets.PORT }}" >> .env

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew clean build

    - name: DockerHub Login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Docker Image Build
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }} .

    - name: DockerHub Push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}

    - name: Application Run
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_KEY }}

        script: |
          echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | sudo docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

          sudo docker stop ${{ secrets.PROJECT_NAME }} || true
          sudo docker rm -f ${{ secrets.PROJECT_NAME }} || true
          sudo docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}:latest || true
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}:latest
          
          sudo docker run -p ${{ secrets.PORT }}:${{ secrets.PORT }} \
          --name ${{ secrets.PROJECT_NAME }} \
          -d ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}:latest

    - name: Show Spring Logs
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_KEY }}

        script: |
          sudo docker logs -f ${{ secrets.PROJECT_NAME }}